import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler

# Load the Iris dataset
iris = datasets.load_iris()
X = iris.data  # Features (4 dimensions)
y = iris.target  # Target labels

# Standardizing the features (important for PCA)
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Apply PCA to reduce dimensions from 4 to 2
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X_scaled)

# Print explained variance ratio
explained_variance = pca.explained_variance_ratio_
print(f"Explained Variance Ratio: {explained_variance}")

# Set style for better visualization
plt.style.use('seaborn')

# Plot the PCA-transformed data
plt.figure(figsize=(8, 6))
colors = ['red', 'blue', 'green']
for target, color in zip(range(3), colors):
    plt.scatter(X_pca[y == target, 0], X_pca[y == target, 1], 
                label=iris.target_names[target], alpha=0.7, edgecolors='k', color=color)

plt.xlabel('Principal Component 1')
plt.ylabel('Principal Component 2')
plt.title('PCA of Iris Dataset')
plt.legend()
plt.grid(True)
plt.show()